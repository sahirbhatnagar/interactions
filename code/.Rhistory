matplot(res$beta[,1:res$m] %>% t, type = "l", ylab="")
matplot(res$gamma[,1:res$m] %>% t, type = "l", ylab="")
cbind2(res$gamma[,1:res$m], true.betas.and.gammas[interaction_names,,drop=F])
res <- shim_fix_gamma(x = X, y = Y, main.effect.names = main_effect_names,
interaction.names = interaction_names,
lambda.beta = 10, lambda.gamma = 10, threshold = 1e-8, max.iter = 500)
matplot(res$beta[,1:res$m] %>% t, type = "l", ylab="")
matplot(res$gamma[,1:res$m] %>% t, type = "l", ylab="")
cbind2(res$beta[,1:res$m], true.betas.and.gammas[main_effect_names,,drop=F])
res <- shim_fix_gamma(x = X, y = Y, main.effect.names = main_effect_names,
interaction.names = interaction_names,
lambda.beta = 0, lambda.gamma = 0, threshold = 1e-8, max.iter = 500)
matplot(res$beta[,1:res$m] %>% t, type = "l", ylab="")
res <- shim_fix_gamma(x = X, y = Y, main.effect.names = main_effect_names,
interaction.names = interaction_names,
lambda.beta = 10, lambda.gamma = 10, threshold = 1e-8, max.iter = 500)
# plot of cofficients at each iteration
matplot(res$beta[,1:res$m] %>% t, type = "l", ylab="")
matplot(res$gamma[,1:res$m] %>% t, type = "l", ylab="")
cbind2(res$beta[,1:res$m], true.betas.and.gammas[main_effect_names,,drop=F])
res <- shim_fix_gamma(x = X, y = Y, main.effect.names = main_effect_names,
interaction.names = interaction_names,
lambda.beta = 5, lambda.gamma = 5, threshold = 1e-8, max.iter = 500)
# plot of cofficients at each iteration
matplot(res$beta[,1:res$m] %>% t, type = "l", ylab="")
matplot(res$gamma[,1:res$m] %>% t, type = "l", ylab="")
cbind2(res$beta[,1:res$m], true.betas.and.gammas[main_effect_names,,drop=F])
rm(list = ls())
source("packages.R")
source("data.R")
source("functions.R")
res <- shim_fix_betas(x = X, y = Y, main.effect.names = main_effect_names,
interaction.names = interaction_names,
lambda.beta = 0.5, lambda.gamma = 0.5, threshold = 1e-8, max.iter = 500)
res <- shim_fix_gamma(x = X, y = Y, main.effect.names = main_effect_names,
interaction.names = interaction_names,
lambda.beta = 5, lambda.gamma = 5, threshold = 1e-8, max.iter = 500)
# plot of cofficients at each iteration
matplot(res$beta[,1:res$m] %>% t, type = "l", ylab="")
matplot(res$gamma[,1:res$m] %>% t, type = "l", ylab="")
cbind2(res$beta[,1:res$m], true.betas.and.gammas[main_effect_names,,drop=F])
res <- shim(x = X, y = Y, main.effect.names = main_effect_names,
interaction.names = interaction_names,
lambda.beta = 2.5, lambda.gamma = 2.5, threshold = 1e-8, max.iter = 500,
initialization.type = "univariate")
res <- shim(x = X, y = Y, main.effect.names = main_effect_names,
interaction.names = interaction_names,
lambda.beta = 2.5, lambda.gamma = 2.5, threshold = 1e-8, max.iter = 500,
initialization.type = "ridge")
rm(list = ls())
source("packages.R")
source("data.R")
source("functions.R")
res <- shim(x = X, y = Y, main.effect.names = main_effect_names,
interaction.names = interaction_names,
lambda.beta = 2.5, lambda.gamma = 2.5, threshold = 1e-8, max.iter = 500,
initialization.type = "ridge")
res <- shim_fix_gamma(x = X, y = Y, main.effect.names = main_effect_names,
interaction.names = interaction_names,
lambda.beta = 5, lambda.gamma = 5, threshold = 1e-8, max.iter = 500)
matplot(res$beta[,1:res$m] %>% t, type = "l", ylab="")
matplot(res$gamma[,1:res$m] %>% t, type = "l", ylab="")
cbind2(res$beta[,1:res$m], true.betas.and.gammas[main_effect_names,,drop=F])
rm(list = ls())
source("packages.R")
source("data.R")
source("functions.R")
res <- shim_fix_gamma(x = X, y = Y, main.effect.names = main_effect_names,
interaction.names = interaction_names,
lambda.beta = 5, lambda.gamma = 5, threshold = 1e-8, max.iter = 500)
matplot(res$beta[,1:res$m] %>% t, type = "l", ylab="")
matplot(res$gamma[,1:res$m] %>% t, type = "l", ylab="")
cbind2(res$beta[,1:res$m], true.betas.and.gammas[main_effect_names,,drop=F])
res <- shim_fix_gamma(x = X, y = Y, main.effect.names = main_effect_names,
interaction.names = interaction_names,
lambda.beta = 0.1, lambda.gamma = 0.1, threshold = 1e-8, max.iter = 500)
matplot(res$beta[,1:res$m] %>% t, type = "l", ylab="")
matplot(res$gamma[,1:res$m] %>% t, type = "l", ylab="")
cbind2(res$beta[,1:res$m], true.betas.and.gammas[main_effect_names,,drop=F])
res <- shim_fix_gamma(x = X, y = Y, main.effect.names = main_effect_names,
interaction.names = interaction_names,
lambda.beta = 0.2, lambda.gamma = 0.5, threshold = 1e-8, max.iter = 500)
matplot(res$beta[,1:res$m] %>% t, type = "l", ylab="")
matplot(res$gamma[,1:res$m] %>% t, type = "l", ylab="")
cbind2(res$beta[,1:res$m], true.betas.and.gammas[main_effect_names,,drop=F])
res$beta
matplot(res$beta[,1:res$m] %>% t, type = "l", ylab="")
cbind2(res$beta[,1:res$m], true.betas.and.gammas[main_effect_names,,drop=F])
res <- shim_fix_gamma(x = X, y = Y, main.effect.names = main_effect_names,
interaction.names = interaction_names,
lambda.beta = 0.5, lambda.gamma = 0, threshold = 1e-8, max.iter = 500)
# plot of cofficients at each iteration
matplot(res$beta[,1:res$m] %>% t, type = "l", ylab="")
matplot(res$gamma[,1:res$m] %>% t, type = "l", ylab="")
cbind2(res$beta[,1:res$m], true.betas.and.gammas[main_effect_names,,drop=F])
res <- shim_fix_gamma(x = X, y = Y, main.effect.names = main_effect_names,
interaction.names = interaction_names,
lambda.beta = 1, lambda.gamma = 0, threshold = 1e-8, max.iter = 500)
# plot of cofficients at each iteration
matplot(res$beta[,1:res$m] %>% t, type = "l", ylab="")
matplot(res$gamma[,1:res$m] %>% t, type = "l", ylab="")
cbind2(res$beta[,1:res$m], true.betas.and.gammas[main_effect_names,,drop=F])
rm(list = ls())
source("packages.R")
source("data.R")
source("functions.R")
res <- shim(x = X, y = Y, main.effect.names = main_effect_names,
interaction.names = interaction_names,
lambda.beta = 1, lambda.gamma = 0, threshold = 1e-8, max.iter = 500,
initialization.type = "ridge")
matplot(res$beta[,1:res$m] %>% t, type = "l", ylab="")
matplot(res$gamma[,1:res$m] %>% t, type = "l", ylab="")
cbind2(res$beta[,1:res$m], true.betas.and.gammas[main_effect_names,,drop=F])
cbind2(res$gamma[,1:res$m], true.betas.and.gammas[interaction_names,,drop=F])
res <- shim(x = X, y = Y, main.effect.names = main_effect_names,
interaction.names = interaction_names,
lambda.beta = 1, lambda.gamma = 0.1, threshold = 1e-5, max.iter = 500,
initialization.type = "ridge")
matplot(res$beta[,1:res$m] %>% t, type = "l", ylab="")
cbind2(res$beta[,1:res$m], true.betas.and.gammas[main_effect_names,,drop=F])
cbind2(res$gamma[,1:res$m], true.betas.and.gammas[interaction_names,,drop=F])
matplot(res$beta[,1:res$m] %>% t, type = "l", ylab="")
matplot(res$gamma[,1:res$m] %>% t, type = "l", ylab="")
res <- shim(x = X, y = Y, main.effect.names = main_effect_names,
interaction.names = interaction_names,
lambda.beta = 1, lambda.gamma = 2, threshold = 1e-5, max.iter = 500,
initialization.type = "ridge")
matplot(res$beta[,1:res$m] %>% t, type = "l", ylab="")
matplot(res$gamma[,1:res$m] %>% t, type = "l", ylab="")
cbind2(res$beta[,1:res$m], true.betas.and.gammas[main_effect_names,,drop=F])
cbind2(res$gamma[,1:res$m], true.betas.and.gammas[interaction_names,,drop=F])
options(digits=4)
cbind2(res$beta[,1:res$m], true.betas.and.gammas[main_effect_names,,drop=F])
options(scipen=999)
cbind2(res$beta[,1:res$m], true.betas.and.gammas[main_effect_names,,drop=F])
options(scipen=999, digits = 4)
cbind2(res$beta[,1:res$m], true.betas.and.gammas[main_effect_names,,drop=F])
cbind2(round(res$beta[,1:res$m],2), true.betas.and.gammas[main_effect_names,,drop=F])
cbind2(round(res$gamma[,1:res$m],2), true.betas.and.gammas[interaction_names,,drop=F])
cbind2(round(res$beta[,1:res$m],2), true.betas.and.gammas[main_effect_names,,drop=F])
1+1
rm(list = ls())
rm(list = ls())
options(scipen=999, digits = 4)
source("packages.R")
source("data.R")
source("functions.R")
true.betas.and.alphas <- matrix(rep(0,55),nrow = 55, ncol=1) %>% magrittr::set_rownames(colnames(X))
true.betas.and.alphas[names(beta4),] <- beta4
true.betas.and.gammas <- convert(true.betas.and.alphas, main_effect_names, interaction_names)
true.betas.and.gammas[main_effect_names,]
true.betas.and.gammas[main_effect_names,, drop = F]
res <- shim_fix_betas(x = X, y = Y, main.effect.names = main_effect_names,
interaction.names = interaction_names,
lambda.beta = 0.5, lambda.gamma = 0.5, threshold = 1e-8, max.iter = 500,
fixed.beta = true.betas.and.gammas[main_effect_names,, drop = F])
matplot(res$beta[,1:res$m] %>% t, type = "l", ylab="")
matplot(res$gamma[,1:res$m] %>% t, type = "l", ylab="")
cbind2(res$gamma[,1:res$m], true.betas.and.gammas[interaction_names,,drop=F])
res <- shim_fix_gamma(x = X, y = Y, main.effect.names = main_effect_names,
interaction.names = interaction_names,
lambda.beta = 1, lambda.gamma = 0, threshold = 1e-8,
max.iter = 500, fixed.gamma = true.betas.and.gammas[interaction_names, , drop=F])
matplot(res$beta[,1:res$m] %>% t, type = "l", ylab="")
matplot(res$gamma[,1:res$m] %>% t, type = "l", ylab="")
rm(list = ls())
options(scipen=0, digits = 3)
res <- shim_fix_gamma(x = X, y = Y, main.effect.names = main_effect_names,
interaction.names = interaction_names,
lambda.beta = 1, lambda.gamma = 0, threshold = 1e-8,
max.iter = 500, fixed.gamma = true.betas.and.gammas[interaction_names, , drop=F])
rm(list = ls())
options(scipen=0, digits = 3)
source("packages.R")
source("data.R")
source("functions.R")
true.betas.and.alphas <- matrix(rep(0,55),nrow = 55, ncol=1) %>%
magrittr::set_rownames(colnames(X))
true.betas.and.alphas[names(beta4),] <- beta4
true.betas.and.gammas <- convert(true.betas.and.alphas, main_effect_names, interaction_names)
res <- shim_fix_gamma(x = X, y = Y, main.effect.names = main_effect_names,
interaction.names = interaction_names,
lambda.beta = 1, lambda.gamma = 0, threshold = 1e-8,
max.iter = 500, fixed.gamma = true.betas.and.gammas[interaction_names, , drop=F])
res <- shim_fix_gamma(x = X, y = Y, main.effect.names = main_effect_names,
interaction.names = interaction_names,
lambda.beta = 1, lambda.gamma = 0, threshold = 1e-8,
max.iter = 500, initialization.type = "univariate",
fixed.gamma = true.betas.and.gammas[interaction_names, , drop=F])
matplot(res$beta[,1:res$m] %>% t, type = "l", ylab="")
matplot(res$gamma[,1:res$m] %>% t, type = "l", ylab="")
cbind2(res$beta[,1:res$m], true.betas.and.gammas[main_effect_names,,drop=F])
res <- shim_fix_gamma(x = X, y = Y, main.effect.names = main_effect_names,
interaction.names = interaction_names,
lambda.beta = 1, lambda.gamma = 1, threshold = 1e-8,
max.iter = 500, initialization.type = "univariate",
fixed.gamma = true.betas.and.gammas[interaction_names, , drop=F])
matplot(res$beta[,1:res$m] %>% t, type = "l", ylab="")
matplot(res$gamma[,1:res$m] %>% t, type = "l", ylab="")
cbind2(res$beta[,1:res$m], true.betas.and.gammas[main_effect_names,,drop=F])
res <- shim(x = X, y = Y, main.effect.names = main_effect_names,
interaction.names = interaction_names,
lambda.beta = 1, lambda.gamma = 1, threshold = 1e-5, max.iter = 500,
initialization.type = "univariate")
res <- shim(x = X, y = Y, main.effect.names = main_effect_names,
interaction.names = interaction_names,
lambda.beta = 1, lambda.gamma = 1, threshold = 1e-5, max.iter = 500,
initialization.type = "ridge")
res <- shim(x = X, y = Y, main.effect.names = main_effect_names,
interaction.names = interaction_names,
lambda.beta = 1, lambda.gamma = 12, threshold = 1e-5, max.iter = 500,
initialization.type = "ridge")
res <- shim(x = X, y = Y, main.effect.names = main_effect_names,
interaction.names = interaction_names,
lambda.beta = 5, lambda.gamma = 2, threshold = 1e-5, max.iter = 500,
initialization.type = "ridge")
res <- shim(x = X, y = Y, main.effect.names = main_effect_names,
interaction.names = interaction_names,
lambda.beta = 5, lambda.gamma = 5, threshold = 1e-5, max.iter = 500,
initialization.type = "ridge")
source("functions.R")
res <- shim(x = X, y = Y, main.effect.names = main_effect_names,
interaction.names = interaction_names,
lambda.beta = 5, lambda.gamma = 5, threshold = 1e-5, max.iter = 500,
initialization.type = "ridge")
res <- shim(x = X, y = Y, main.effect.names = main_effect_names,
interaction.names = interaction_names,
lambda.beta = 1.5, lambda.gamma = 1.5, threshold = 1e-5, max.iter = 500,
initialization.type = "ridge")
res <- shim(x = X, y = Y, main.effect.names = main_effect_names,
interaction.names = interaction_names,
lambda.beta = 1.5, lambda.gamma = 1.5, threshold = 1e-5, max.iter = 500,
initialization.type = "univariate")
matplot(res$beta[,1:res$m] %>% t, type = "l", ylab="")
matplot(res$gamma[,1:res$m] %>% t, type = "l", ylab="")
cbind2(round(res$beta[,1:res$m],2), true.betas.and.gammas[main_effect_names,,drop=F])
cbind2(round(res$gamma[,1:res$m],2), true.betas.and.gammas[interaction_names,,drop=F])
res <- shim(x = X, y = Y, main.effect.names = main_effect_names,
interaction.names = interaction_names,
lambda.beta = 1.5, lambda.gamma = 2, threshold = 1e-5, max.iter = 500,
initialization.type = "univariate")
matplot(res$beta[,1:res$m] %>% t, type = "l", ylab="")
matplot(res$gamma[,1:res$m] %>% t, type = "l", ylab="")
cbind2(round(res$beta[,1:res$m],2), true.betas.and.gammas[main_effect_names,,drop=F])
cbind2(round(res$gamma[,1:res$m],2), true.betas.and.gammas[interaction_names,,drop=F])
source("packages.R")
source("data.R")
source("functions.R")
# Trying to estimate both betas and gammas --------------------------------
res <- shim(x = X, y = Y, main.effect.names = main_effect_names,
interaction.names = interaction_names,
lambda.beta = 1.5, lambda.gamma = 2, threshold = 1e-5, max.iter = 500,
initialization.type = "univariate")
rm(list = ls())
options(scipen=0, digits = 3)
source("packages.R")
source("data.R")
source("functions.R")
true.betas.and.alphas <- matrix(rep(0,55),nrow = 55, ncol=1) %>%
magrittr::set_rownames(colnames(X))
true.betas.and.alphas[names(beta4),] <- beta4
true.betas.and.gammas <- convert(true.betas.and.alphas, main_effect_names, interaction_names)
res <- shim_fix_gamma(x = X, y = Y, main.effect.names = main_effect_names,
interaction.names = interaction_names,
lambda.beta = 1, lambda.gamma = 1, threshold = 1e-8,
max.iter = 500, initialization.type = "univariate",
fixed.gamma = true.betas.and.gammas[interaction_names, , drop=F])
matplot(res$beta[,1:res$m] %>% t, type = "l", ylab="")
matplot(res$gamma[,1:res$m] %>% t, type = "l", ylab="")
cbind2(res$beta[,1:res$m], true.betas.and.gammas[main_effect_names,,drop=F])
plot(res$Q[1:res$m,], type="l")
cbind2(res$beta[,1:res$m], true.betas.and.gammas[main_effect_names,,drop=F])
res <- shim_fix_gamma(x = X, y = Y, main.effect.names = main_effect_names,
interaction.names = interaction_names,
lambda.beta = 1, lambda.gamma = 2, threshold = 1e-8,
max.iter = 500, initialization.type = "ridge",
fixed.gamma = true.betas.and.gammas[interaction_names, , drop=F])
# plot of cofficients at each iteration
matplot(res$beta[,1:res$m] %>% t, type = "l", ylab="")
matplot(res$gamma[,1:res$m] %>% t, type = "l", ylab="")
cbind2(res$beta[,1:res$m], true.betas.and.gammas[main_effect_names,,drop=F])
rm(list = ls())
source("packages.R")
"%ni%" <- Negate("%in%")
set.seed(12)
p = 100
n = 200
x=matrix(rnorm(n*p),ncol=p)
e=matrix(rbinom(n,1,0.5), ncol=1)
X <- hierNet::compute.interactions.c(cbind2(x,e))
(columns.to.keep <- c(paste0(1:p, ":",1:p), X %>% colnames() %>% grep((p+1) %>% as.character(),., value = T)))
X[,colnames(X) %ni% columns.to.keep ] <- 0
head(X)
y=X[,"1:1"]+ X[,"5:5"] + X[,"101:101"] + 1.5*X[,"1:101"] + 1.5*X[,"5:101"]+1.5*rnorm(n)
fit=hierNet.path(cbind2(x,e),y, zz = X)
fitcv=hierNet.cv(fit,cbind2(x,e),y)
print(fitcv)
plot(fitcv)
fit$th[,,which(fitcv$lamhat.1se==fit$lamlist)]
fit$bp[,which(fitcv$lamhat.1se==fit$lamlist), drop = F] - fit$bn[,which(fitcv$lamhat.1se==fit$lamlist), drop = F]
(d <- fit$th[,,which(fitcv$lamhat.1se==fit$lamlist)])
View(d)
rm(list = ls())
source("packages.R")
"%ni%" <- Negate("%in%")
set.seed(12)
p = 10
n = 200
x=matrix(rnorm(n*p),ncol=p)
e=matrix(rbinom(n,1,0.5), ncol=1)
X <- hierNet::compute.interactions.c(cbind2(x,e))
(columns.to.keep <- c(paste0(1:p, ":",1:p), X %>% colnames() %>% grep((p+1) %>% as.character(),., value = T)))
X[,colnames(X) %ni% columns.to.keep ] <- 0
head(X)
fit = hierNet.path(cbind2(x,e),y, zz = X)
y = X[,"1:1"]+ X[,"5:5"] + X[,"11:11"] + 1.5*X[,"1:11"] + 2*X[,"5:11"]+1.5*rnorm(n)
fit = hierNet.path(cbind2(x,e),y, zz = X)
fitcv = hierNet.cv(fit,cbind2(x,e),y)
print(fitcv)
plot(fitcv)
(d <- fit$th[,,which(fitcv$lamhat.1se==fit$lamlist)])
(d <- fit$th[,,which(fitcv$lamhat==fit$lamlist)])
fit$bp[,which(fitcv$lamhat.1se==fit$lamlist), drop = F] - fit$bn[,which(fitcv$lamhat.1se==fit$lamlist), drop = F]
(d <- fit$th[,,which(fitcv$lamhat.1se==fit$lamlist)])
fit$bp[,which(fitcv$lamhat.1se==fit$lamlist), drop = F] - fit$bn[,which(fitcv$lamhat.1se==fit$lamlist), drop = F]
e=matrix(rgamma(n,1,0.5), ncol=1)
X <- hierNet::compute.interactions.c(cbind2(x,e))
(columns.to.keep <- c(paste0(1:p, ":",1:p), X %>%
colnames() %>%
grep((p+1) %>% as.character(),., value = T)))
X[,colnames(X) %ni% columns.to.keep ] <- 0
head(X)
y = X[,"1:1"]+ X[,"5:5"] + X[,"11:11"] + 1.5*X[,"1:11"] + 2*X[,"5:11"]+1.5*rnorm(n)
fit = hierNet.path(cbind2(x,e),y, zz = X)
fitcv = hierNet.cv(fit,cbind2(x,e),y)
print(fitcv)
plot(fitcv)
(d <- fit$th[,,which(fitcv$lamhat.1se==fit$lamlist)])
head(X)
(columns.to.keep <- c(paste0(1:p, ":",1:p), X %>%
colnames() %>%
grep((p+1) %>% as.character(),., value = T)))
##################################
# R source code file for trying to trick the hierNet package
# into doing GxE interactions
# Created by Sahir, Dec 7, 2015
# Updated
# hosted on Github repo 'sahirbhatnagar/interactions'
# NOTE: this script will automatically install packages not
# currently available locally. source 'packages.R' before running
##################################
rm(list = ls())
#source("packages.R")
library(hierNet)
library(magrittr)
"%ni%" <- Negate("%in%")
set.seed(12)
# number of predictors
p = 10
# number of subjects
n = 200
# predictors
x = matrix(rnorm(n*p),ncol=p)
# environment
e = matrix(rbinom(n,1,0.5), ncol=1)
# create the zz matrix
X <- hierNet::compute.interactions.c(cbind2(x,e))
# find columnames corresponding to main effects and interactions with 'e'
(columns.to.keep <- c(paste0(1:p, ":",1:p), X %>%
colnames() %>%
grep((p+1) %>% as.character(),., value = T)))
# set all other pairwise interactions to 0
X[,colnames(X) %ni% columns.to.keep ] <- 0
head(X)
# generate response
y = X[,"1:1"]+ X[,"5:5"] + X[,"11:11"] + 1.5*X[,"1:11"] + 2*X[,"5:11"]+3*rnorm(n)
fit = hierNet.path(cbind2(x,e),y, zz = X)
fitcv = hierNet.cv(fit,cbind2(x,e),y)
print(fitcv)
plot(fitcv)
# matrix of estimated interaction coefficients
(d <- fit$th[,,which(fitcv$lamhat.1se==fit$lamlist)])
# main effect estimates
fit$bp[,which(fitcv$lamhat.1se==fit$lamlist), drop = F] - fit$bn[,which(fitcv$lamhat.1se==fit$lamlist), drop = F]
set.seed(12)
x=matrix(rnorm(100*10),ncol=10)
x=scale(x,TRUE,TRUE)
y=x[,1]+2*x[,2]+ x[,1]*x[,2]+3*rnorm(100)
fit=hierNet.path(x,y)
fitcv=hierNet.cv(fit,x,y)
print(fitcv)
plot(fitcv)
fit$th[,,which(fitcv$lamhat.1se==fit$lamlist)]
fit$bp[,which(fitcv$lamhat.1se==fit$lamlist), drop = F] - fit$bn[,which(fitcv$lamhat.1se==fit$lamlist), drop = F]
fit$th[,,which(fitcv$lamhat.1se==fit$lamlist)]
72+68
72+68+14
32+56+71
55+58+12
55+58+25
rm(list = ls())
options(scipen=0, digits = 3)
source("packages.R")
source("data.R")
source("functions.R")
res <- shim(x = X, y = Y, main.effect.names = main_effect_names,
interaction.names = interaction_names,
lambda.beta = 1.5, lambda.gamma = 2, threshold = 1e-5, max.iter = 500,
initialization.type = "univariate")
matplot(res$beta[,1:res$m] %>% t, type = "l", ylab="")
matplot(res$gamma[,1:res$m] %>% t, type = "l", ylab="")
cbind2(round(res$beta[,1:res$m],2), true.betas.and.gammas[main_effect_names,,drop=F])
true.betas.and.alphas <- matrix(rep(0,55),nrow = 55, ncol=1) %>%
magrittr::set_rownames(colnames(X))
true.betas.and.alphas[names(beta4),] <- beta4
true.betas.and.gammas <- convert(true.betas.and.alphas, main_effect_names, interaction_names)
cbind2(round(res$beta[,1:res$m],2), true.betas.and.gammas[main_effect_names,,drop=F])
rm(list = ls())
options(scipen=0, digits = 3)
source("packages.R")
source("data.R")
source("functions.R")
# Trying to estimate both betas and gammas --------------------------------
res <- shim(x = X, y = Y, main.effect.names = main_effect_names,
interaction.names = interaction_names,
lambda.beta = 1.5, lambda.gamma = 2, threshold = 1e-5, max.iter = 500,
initialization.type = "univariate")
res <- shim(x = X, y = Y, main.effect.names = main_effect_names,
interaction.names = interaction_names,
lambda.beta = 1.5, lambda.gamma = 2, threshold = 1e-5, max.iter = 500,
initialization.type = "ridge")
rm(list = ls())
options(scipen=0, digits = 3)
source("packages.R")
source("data.R")
source("functions.R")
# Trying to estimate both betas and gammas --------------------------------
res <- shim(x = X, y = Y, main.effect.names = main_effect_names,
interaction.names = interaction_names,
lambda.beta = 1.5, lambda.gamma = 2, threshold = 1e-5, max.iter = 500,
initialization.type = "ridge")
matplot(res$beta[,1:res$m] %>% t, type = "l", ylab="")
matplot(res$gamma[,1:res$m] %>% t, type = "l", ylab="")
cbind2(round(res$beta[,1:res$m],2), true.betas.and.gammas[main_effect_names,,drop=F])
true.betas.and.alphas <- matrix(rep(0,55),nrow = 55, ncol=1) %>%
magrittr::set_rownames(colnames(X))
true.betas.and.alphas[names(beta4),] <- beta4
true.betas.and.gammas <- convert(true.betas.and.alphas, main_effect_names, interaction_names)
cbind2(round(res$beta[,1:res$m],2), true.betas.and.gammas[main_effect_names,,drop=F])
cbind2(round(res$gamma[,1:res$m],2), true.betas.and.gammas[interaction_names,,drop=F])
rm(list = ls())
options(scipen=0, digits = 3)
source("packages.R")
source("data.R")
source("functions.R")
true.betas.and.alphas <- matrix(rep(0,55),nrow = 55, ncol=1) %>%
magrittr::set_rownames(colnames(X))
true.betas.and.alphas[names(beta4),] <- beta4
true.betas.and.gammas <- convert(true.betas.and.alphas, main_effect_names, interaction_names)
res <- shim_fix_gamma(x = X, y = Y, main.effect.names = main_effect_names,
interaction.names = interaction_names,
lambda.beta = 1, lambda.gamma = 2, threshold = 1e-8,
max.iter = 500, initialization.type = "ridge",
fixed.gamma = true.betas.and.gammas[interaction_names, , drop=F])
matplot(res$beta[,1:res$m] %>% t, type = "l", ylab="")
matplot(res$gamma[,1:res$m] %>% t, type = "l", ylab="")
cbind2(res$beta[,1:res$m], true.betas.and.gammas[main_effect_names,,drop=F])
plot(res$Q[1:res$m,], type="l")
res <- shim_fix_gamma(x = X, y = Y, main.effect.names = main_effect_names,
interaction.names = interaction_names,
lambda.beta = 0.5, lambda.gamma = 0.5, threshold = 1e-8,
max.iter = 500, initialization.type = "ridge",
fixed.gamma = true.betas.and.gammas[interaction_names, , drop=F])
matplot(res$beta[,1:res$m] %>% t, type = "l", ylab="")
matplot(res$gamma[,1:res$m] %>% t, type = "l", ylab="")
cbind2(res$beta[,1:res$m], true.betas.and.gammas[main_effect_names,,drop=F])
rm(list = ls())
options(scipen=0, digits = 3)
source("packages.R")
source("data.R")
source("functions.R")
# Trying to estimate both betas and gammas --------------------------------
true.betas.and.alphas <- matrix(rep(0,55),nrow = 55, ncol=1) %>%
magrittr::set_rownames(colnames(X))
true.betas.and.alphas[names(beta4),] <- beta4
true.betas.and.gammas <- convert(true.betas.and.alphas, main_effect_names, interaction_names)
res <- shim(x = X, y = Y, main.effect.names = main_effect_names,
interaction.names = interaction_names,
lambda.beta = 1.5, lambda.gamma = 2, threshold = 1e-5, max.iter = 500,
initialization.type = "ridge")
# plot of cofficients at each iteration
matplot(res$beta[,1:res$m] %>% t, type = "l", ylab="")
matplot(res$gamma[,1:res$m] %>% t, type = "l", ylab="")
cbind2(round(res$beta[,1:res$m],2), true.betas.and.gammas[main_effect_names,,drop=F])
cbind2(round(res$gamma[,1:res$m],2), true.betas.and.gammas[interaction_names,,drop=F])
rm(list = ls())
options(scipen=0, digits = 3)
source("packages.R")
source("data.R")
source("functions.R")
true.betas.and.alphas <- matrix(rep(0,55),nrow = 55, ncol=1) %>%
magrittr::set_rownames(colnames(X))
true.betas.and.alphas[names(beta1),] <- beta1
true.betas.and.gammas <- convert(true.betas.and.alphas, main_effect_names, interaction_names)
res <- shim(x = X, y = Y, main.effect.names = main_effect_names,
interaction.names = interaction_names,
lambda.beta = 1.5, lambda.gamma = 2, threshold = 1e-5, max.iter = 500,
initialization.type = "ridge")
matplot(res$beta[,1:res$m] %>% t, type = "l", ylab="")
matplot(res$gamma[,1:res$m] %>% t, type = "l", ylab="")
cbind2(round(res$beta[,1:res$m],2), true.betas.and.gammas[main_effect_names,,drop=F])
cbind2(round(res$gamma[,1:res$m],2), true.betas.and.gammas[interaction_names,,drop=F])
